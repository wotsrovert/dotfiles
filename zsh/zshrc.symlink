# If not running interactively, don't do anything
[ -z "$PS1" ] && return


# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/src

# set default editor
export VISUAL=vim
export EDITOR=vim

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

if [[ -z $TMUX ]]; then
  # load the path files
  for file in ${(M)config_files:#*/path.zsh}
  do
    source $file
  done
fi

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset file
unset config_files



# Don't hang with Ctrl+s / Ctrl+q
stty -ixon


# use .localrc for SUPER SECRET CRAP that you don't want in your public,
# versioned repo. This should be last so it can override global configs.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi


# Don't hang with Ctrl+s / Ctrl+q
stty -ixon

# fix +[__NSCFConstantString initialize] may have been in progress in another thread when fork() was called.
# errors when running feature specs in rails
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES

export PATH="$HOME/.rbenv/bin:$PATH"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

export PATH="$HOME/.yarn/bin:$PATH"
export PATH="/usr/local/opt/qt@5.5/bin:$PATH"
export PATH="/opt/homebrew/opt/postgresql@16/bin:$PATH"
export PATH="$HOME/.nodenv/bin:$PATH"
eval "$(/opt/homebrew/bin/brew shellenv)"

eval "$(nodenv init -)"
